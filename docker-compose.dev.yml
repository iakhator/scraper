
services:
  analytics:
    container_name: scraper-analytics-dev
    build:
      context: .
      dockerfile: ./analytics/Dockerfile
      target: dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    env_file:
      - ./analytics/.env
    volumes:
      - ./analytics:/app
      - analytics_node_modules:/app/node_modules
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./analytics
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./analytics/package.json
  backend:
    container_name: scraper-backend-dev
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: dev
      args:
        - REPO_TOKEN=${REPO_TOKEN}
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./backend/package.json
  
  redis:
    container_name: scraper-redis
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
  localstack:
    container_name: localstack-main
    image: localstack/localstack:latest
    ports:
      - "127.0.0.1:4566:4566"  
      - "127.0.0.1:4510-4559:4510-4559" 
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PERSISTENCE=1
      - LAMBDA_EXECUTOR=docker
      - LOCALSTACK_HOST=localstack
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./volume:/var/lib/localstack"

volumes:
  analytics_node_modules:
  worker_node_modules:
  queue_node_modules:
  localstack_data:
  redis-data:
